{
  "openapi": "3.0.0",
  "info": {
    "title": "JDG Back-End VET",
    "description": "Documentation from JDG Back-End VET.",
    "version": "1.0.0",
    "contact": {
      "email": "veterinariobackend@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "testing local"
    },
    {
      "url": "https://apiintersala-production.up.railway.app",
      "description": "API in Production"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags":["Auth"],
        "summary": "Returns bearer Token.",
        "description": "Returns the token for authenticating private routes.",
        "requestBody": {
          "content": {
            "application/json":{
              "schema":{
                "type": "object"
              },
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "example": {
                "email": "luisteste@gmail.com",
                "password": "teste"
              }
            }
          }
        },
        "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema":{
                    "type": "object"
                  },
                  "properties": {
                   "token": {
                    "type": "string",
                    "description": "Returns the token for authenticating private routes."
                   }
                  },
                  "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImVtYWlsIjoibHVpc3Rlc3RlQGdtYWlsLmNvbSIsInBhc3N3b3JkIjoidGVzdGUifSwiaWF0IjoxNjg2MzI4MzcwLCJleHAiOjE2ODYzMzE5NzB9._Z1sfEqYU7hw5fZkxvntBAffYNJBZVyKCmaIFpkIgJo"
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            },
            "401": {
              "description": "Unauthorized"
            }
        }
      }
    },
    "/schedules/getAll": {
      "get": {
        "tags":["Schedulings"],
        "security": [{"bearerAuth": []}],
        "summary": "Returns a list of all schedules.",
        "description": "Get all schedules.",

        "responses": {
            "200": {
              "description": "Success"
            },
            "401": {
              "description": "Unauthorized"
            }
        }
      }
    },
    "/schedules/create": {
      "post": {
        "tags":["Schedulings"],
        "security": [{"bearerAuth": []}],
        "summary": "Create a schedule.",
        "description": "Create a schedule in database.",
        "requestBody": {
          "content": {
            "application/json":{
              "schema":{
                "type": "object"
              },
              "properties": {
                "name": {
                  "type": "string"
                 },
                 "petName": {
                  "type": "string"
                 },
                 "specialty": {
                  "type": "string"
                 },
                 "symptoms": {
                  "type": "string"
                 },
                 "startTime": {
                  "type": "Date"
                 },
                 "scheduleDate": {
                  "type": "Date"
                 }
              },
              "example": {
                "name": "Luis Gabriel",
                "petName": "Oliver",
                "specialty": "Medical clinic",
                "symptoms": "Vomiting for a week",
                "startTime": "2023-05-24T14:50:00.000Z",
                "scheduleDate": "2023-05-24T00:00:00.000Z"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema":{
                  "type": "object"
                },
                "properties": {
                  "name": {
                  "type": "string"
                 },
                 "petName": {
                  "type": "string"
                 },
                 "specialty": {
                  "type": "string"
                 },
                 "symptoms": {
                  "type": "string"
                 },
                 "startTime": {
                  "type": "string",
                  "format": "date"
                 },
                 "closingTime": {
                  "type": "string",
                  "format": "date"
                 },
                 "scheduleDate": {
                  "type": "string",
                  "format": "date"
                 },
                 "closed": {
                  "type": "boolean"
                 }
                },
                "example": {
                  "name": "User info in Database",
                  "petname": "Oliver",
                  "specialty": "Medical clinic",
                  "symptoms": "Vomiting for a week",
                  "startTime": "2023-05-24T14:50:00.000Z",
                  "closingTime": "2023-05-24T15:50:00.000Z",
                  "scheduleDate": "2023-05-24T00:00:00.000Z",
                  "closed": "false",
                  "_id": "6488c36eda54487a33ea963a"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad Request"
          }
      }
    }
  },
    "/schedules/reschedule/{id}" : {
      "put": {
        "tags":["Schedulings"],
        "security": [{"bearerAuth": []}],
        "summary": "Reschedules an existing appointment in the database.",
        "description": "Reschedules an appointment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
                "type": "object"
              },
              "properties": {
                "scheduleTime": {
                "type": "string"
               }
              },
              "example": {
                "scheduleTime": "2023-05-22T21:25:00.000"
              }
            }
          }
        },
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Schedule id already booked."
        }],
        "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema":{
                    "type": "object"
                  },
                  "properties": {
                    "_id": {
                    "type": "string"
                   },
                   "petName": {
                    "type": "string"
                   },
                   "specialty": {
                    "type": "string"
                   },
                   "symptoms": {
                    "type": "string"
                   },
                   "startTime": {
                    "type": "Date"
                   },
                   "scheduleDate": {
                    "type": "Date"
                   }
                  },
                  "example": {
                    "_id": "6488c36eda54487a33ea963a",
                    "petname": "Oliver",
                    "specialty": "Medical clinic",
                    "symptoms": "Vomiting for a week",
                    "startTime": "2023-05-24T14:50:00.000Z",
                    "closingTime": "2023-05-24T15:50:00.000Z",
                    "scheduleDate": "2023-05-24T00:00:00.000Z",
                    "closed": "false"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Bad Request"
            }
        }
      }
    },
    "/schedules/closeSchedule/{id}" : {
      "put": {
        "tags":["Schedulings"],
        "security": [{"bearerAuth": []}],
        "summary": "Closes an schedule in database.",
        "description": "Closes an schedule.",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Schedule id already booked."
        }],
        "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema":{
                    "type": "object"
                  },
                  "properties": {
                    "_id": {
                    "type": "string"
                   },
                   "petName": {
                    "type": "string"
                   },
                   "specialty": {
                    "type": "string"
                   },
                   "symptoms": {
                    "type": "string"
                   },
                   "startTime": {
                    "type": "Date"
                   },
                   "scheduleDate": {
                    "type": "Date"
                   }
                  },
                  "example": {
                    "_id": "6488c36eda54487a33ea963a",
                    "petname": "Oliver",
                    "specialty": "Medical clinic",
                    "symptoms": "Vomiting for a week",
                    "startTime": "2023-05-24T14:50:00.000Z",
                    "closingTime": "2023-05-24T15:50:00.000Z",
                    "scheduleDate": "2023-05-24T00:00:00.000Z",
                    "closed": "true"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Bad Request"
            }
        }
      }
    },
    "/schedules/delete/{id}" : {
      "delete": {
        "tags":["Schedulings"],
        "security": [{"bearerAuth": []}],
        "summary": "Delete an schedule in database.",
        "description": "Delete an schedule.",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Schedule id already booked."
        }],
        "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema":{
                    "type": "object"
                  },
                  "properties": {
                   "msg": {
                    "type": "string"
                   }
                  },
                  "example": {
                   "msg": "Appointment cancel with successful."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Bad Request"
            }
        }
      }
    },
    "/user": {
      "get": {
        "tags":["Users"],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "tags":["Users"],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags":["Users"],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "tags":["Users"],
        "summary": "Update user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags":["Users"],
        "summary": "Delete user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/{name}": {
      "get": {
        "tags":["Users"],
        "summary": "Find user by name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "components": {
    "schemas":{
      "Schedule": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
         },
         "petName": {
          "type": "string"
         },
         "specialty": {
          "type": "string"
         },
         "symptoms": {
          "type": "string"
         },
         "startTime": {
          "type": "string",
          "format": "date"
         },
         "scheduleDate": {
          "type": "string",
          "format": "date"
         }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NewUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    }
  },
    "securitySchemes":{
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }

}
